{"version":3,"file":"static/js/76.2bd3aa67.chunk.js","mappings":"4TAGMA,EAAiB,mCAEVC,EAAiB,mCAAG,+GAENC,EAAAA,EAAAA,IAAA,gEACoCF,IAH9B,cAEvBG,EAFuB,OAKvBC,EAAeD,EAASE,KAAKC,QALN,kBAMtBF,GANsB,gCAQ7BG,QAAQC,IAAR,MAR6B,yDAAH,qDAYjBC,EAAmB,mCAAG,WAAMC,GAAN,kGAERR,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACwDU,EADxD,oBAFQ,cAEzBP,EAFyB,OAKzBC,EAAeD,EAASE,KAAKC,QALJ,kBAMxBF,GANwB,gCAQ/BO,EAAAA,GAAAA,MAAY,KAAMC,SARa,yDAAH,sDAYnBC,EAAgB,mCAAG,WAAMC,GAAN,kGAELZ,EAAAA,EAAAA,IAAA,6CACiBY,EADjB,oBAC+Bd,EAD/B,oBAFK,cAEtBG,EAFsB,OAKtBC,EAAeD,EAASE,KALF,kBAMrBD,GANqB,gCAQ5BG,QAAQC,IAAR,MAR4B,yDAAH,sDAYhBO,EAAa,mCAAG,WAAMD,GAAN,kGAEFZ,EAAAA,EAAAA,IAAA,6CACiBY,EADjB,4BACuCd,EADvC,oBAFE,cAEnBG,EAFmB,OAKnBC,EAAeD,EAASE,KAAKW,KALV,kBAMlBZ,GANkB,gCAQzBG,QAAQC,IAAR,MARyB,yDAAH,sDAYbS,EAAiB,mCAAG,WAAMH,GAAN,kGAENZ,EAAAA,EAAAA,IAAA,6CACiBY,EADjB,4BACuCd,EADvC,6BAFM,cAEvBG,EAFuB,OAKvBC,EAAeD,EAASE,KAAKC,QALN,kBAMtBF,GANsB,gCAQ7BG,QAAQC,IAAR,MAR6B,yDAAH,qD,gHCpD9B,EAA2B,uBAA3B,EAAsE,gC,mBCsDtE,EAhDa,WACX,OAAwBU,EAAAA,EAAAA,UAAS,IAAjC,eAAOF,EAAP,KAAaG,EAAb,KACQL,GAAOM,EAAAA,EAAAA,MAAPN,GAUR,OARAO,EAAAA,EAAAA,YAAU,WACHP,IAILC,EAAAA,EAAAA,IAAcD,GAAIQ,KAAKH,EACxB,GAAE,CAACL,KAGF,0BACE,eAAIS,UAAWC,EAAf,gBACGR,QADH,IACGA,OADH,EACGA,EAAMS,KAAI,gBAAGX,EAAH,EAAGA,GAAIY,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACT,2BACE,gBACEC,IACED,EAAY,0CAC2BA,GACnCE,EAENC,IAAKL,EACLM,MAAM,SAER,iBAAKT,UAAWC,EAAhB,WACE,uBAAIE,KACJ,uCAAeC,UAZVb,EADA,OAoBlB,C","sources":["api/Movies-fetch.jsx","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst MOVIES_API_KEY = '067705c909e37a633e5abed845a3422c';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${MOVIES_API_KEY}`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${MOVIES_API_KEY}&query=${query}&language=en-US`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMoviesDetails = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${MOVIES_API_KEY}&language=en-US`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${MOVIES_API_KEY}&language=en-US`\n    );\n    const responseData = response.data.cast;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesRevieews = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${MOVIES_API_KEY}&page=1&language='en-US'`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castConteinerText\":\"Cast_castConteinerText__PmRrE\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesCast } from '../../api/Movies-fetch';\nimport style from './Cast.module.css';\nimport PropTypes from 'prop-types';\nimport notFoundImage from '../../images/notFoundImage.jpg';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    getMoviesCast(id).then(setCast);\n  }, [id]);\n\n  return (\n    <div>\n      <ul className={style.castList}>\n        {cast?.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <img\n              src={\n                profile_path\n                  ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                  : notFoundImage\n              }\n              alt={name}\n              width=\"100\"\n            />\n            <div className={style.castConteinerText}>\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n"],"names":["MOVIES_API_KEY","getTrendingMovies","axios","response","responseData","data","results","console","log","searchMoviesByQuery","query","toast","message","getMoviesDetails","id","getMoviesCast","cast","getMoviesRevieews","useState","setCast","useParams","useEffect","then","className","style","map","name","character","profile_path","src","notFoundImage","alt","width"],"sourceRoot":""}