{"version":3,"file":"static/js/168.29e3c701.chunk.js","mappings":"6TAGMA,EAAiB,mCAEVC,EAAiB,mCAAG,+GAENC,EAAAA,EAAAA,IAAA,gEACoCF,IAH9B,cAEvBG,EAFuB,OAKvBC,EAAeD,EAASE,KAAKC,QALN,kBAMtBF,GANsB,gCAQ7BG,QAAQC,IAAR,MAR6B,yDAAH,qDAYjBC,EAAmB,mCAAG,WAAMC,GAAN,kGAERR,EAAAA,EAAAA,IAAA,4DACgCF,EADhC,kBACwDU,EADxD,oBAFQ,cAEzBP,EAFyB,OAKzBC,EAAeD,EAASE,KAAKC,QALJ,kBAMxBF,GANwB,gCAQ/BO,EAAAA,GAAAA,MAAY,KAAMC,SARa,yDAAH,sDAYnBC,EAAgB,mCAAG,WAAMC,GAAN,kGAELZ,EAAAA,EAAAA,IAAA,6CACiBY,EADjB,oBAC+Bd,EAD/B,oBAFK,cAEtBG,EAFsB,OAKtBC,EAAeD,EAASE,KALF,kBAMrBD,GANqB,gCAQ5BG,QAAQC,IAAR,MAR4B,yDAAH,sDAYhBO,EAAa,mCAAG,WAAMD,GAAN,kGAEFZ,EAAAA,EAAAA,IAAA,6CACiBY,EADjB,4BACuCd,EADvC,oBAFE,cAEnBG,EAFmB,OAKnBC,EAAeD,EAASE,KAAKW,KALV,kBAMlBZ,GANkB,gCAQzBG,QAAQC,IAAR,MARyB,yDAAH,sDAYbS,EAAiB,mCAAG,WAAMH,GAAN,kGAENZ,EAAAA,EAAAA,IAAA,6CACiBY,EADjB,4BACuCd,EADvC,6BAFM,cAEvBG,EAFuB,OAKvBC,EAAeD,EAASE,KAAKC,QALN,kBAMtBF,GANsB,gCAQ7BG,QAAQC,IAAR,MAR6B,yDAAH,qD,gHCpD9B,GAAiB,E,SC8CjB,EAzCgB,WACd,OAA8BU,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQR,GAAOS,EAAAA,EAAAA,MAAPT,GAaR,OAXAU,EAAAA,EAAAA,YAAU,WACHV,KAILG,EAAAA,EAAAA,IAAkBH,GAAIW,KAAKL,GACR,IAAfA,GACFE,EAAa,4CAEhB,GAAE,CAACR,KAGF,iBAAKY,UAAWC,EAAAA,eAAhB,WACE,gBAAKD,UAAWC,EAAAA,gBAAhB,SAAwCN,KACxC,eAAIK,UAAWC,EAAAA,YAAf,gBACGR,QADH,IACGA,OADH,EACGA,EAASS,KAAI,gBAAGd,EAAH,EAAGA,GAAIe,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACZ,gBAAIJ,UAAWC,EAAAA,YAAf,WACE,gBAAID,UAAWC,EAAAA,aAAf,qBAA4CE,MAC5C,cAAGH,UAAWC,EAAAA,eAAd,SAAqCG,MAFAhB,EAD3B,QASrB,C","sources":["api/Movies-fetch.jsx","components/Reviews/Reviews.module.css","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst MOVIES_API_KEY = '067705c909e37a633e5abed845a3422c';\n\nexport const getTrendingMovies = async () => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/trending/all/day?api_key=${MOVIES_API_KEY}`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const searchMoviesByQuery = async query => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/search/movie?api_key=${MOVIES_API_KEY}&query=${query}&language=en-US`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    toast.error(error.message);\n  }\n};\n\nexport const getMoviesDetails = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=${MOVIES_API_KEY}&language=en-US`\n    );\n    const responseData = response.data;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesCast = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${MOVIES_API_KEY}&language=en-US`\n    );\n    const responseData = response.data.cast;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMoviesRevieews = async id => {\n  try {\n    const response = await axios.get(\n      `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${MOVIES_API_KEY}&page=1&language='en-US'`\n    );\n    const responseData = response.data.results;\n    return responseData;\n  } catch (error) {\n    console.log(error);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMoviesRevieews } from '../../api/Movies-fetch';\nimport style from './Reviews.module.css';\nimport PropTypes from 'prop-types';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [noReviews, setNoReviews] = useState([]);\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (!id) {\n      return;\n    }\n\n    getMoviesRevieews(id).then(setReviews);\n    if (setReviews === 0) {\n      setNoReviews(\"We don't have any reviews for this movie\");\n    }\n  }, [id]);\n\n  return (\n    <div className={style.reviewsWrapper}>\n      <div className={style.reviewsNotFound}>{noReviews}</div>\n      <ul className={style.reviewsList}>\n        {reviews?.map(({ id, author, content }) => (\n          <li className={style.reviewsItem} key={id}>\n            <h3 className={style.reviewsTitle}>Author: {author}</h3>\n            <p className={style.reviewsContent}>{content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nReviews.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Reviews;\n"],"names":["MOVIES_API_KEY","getTrendingMovies","axios","response","responseData","data","results","console","log","searchMoviesByQuery","query","toast","message","getMoviesDetails","id","getMoviesCast","cast","getMoviesRevieews","useState","reviews","setReviews","noReviews","setNoReviews","useParams","useEffect","then","className","style","map","author","content"],"sourceRoot":""}